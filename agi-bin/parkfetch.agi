#!/usr/bin/php -q
<?php
//This file is part of FreePBX.
//
//    FreePBX is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 2 of the License, or
//    (at your option) any later version.
//
//    FreePBX is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with FreePBX.  If not, see <http://www.gnu.org/licenses/>.
//    
//    Copyright 2012-2013 Philippe Lindheimer

if ($argc < 2) {
	exit;
}

/*
// Not bootstraping for now, adds a lot of overhead not being used but can be swapped
// out for below if debugging is necessary
//
$restrict_mods = true;
if (!@include_once(getenv('FREEPBX_CONF') ? getenv('FREEPBX_CONF') : '/etc/freepbx.conf')) {
    include_once('/etc/asterisk/freepbx.conf');
}
require_once "phpagi.php";
$agi = new AGI();
*/
require_once "phpagi.php";
require_once "phpagi-asmanager.php";

$agi = new AGI();

$ampmgruser   = get_var( "AMPMGRUSER" );
$ampmgrpass   = get_var( "AMPMGRPASS" );
$astman = new AGI_AsteriskManager( );	
if (!$astman->connect("127.0.0.1", $ampmgruser , $ampmgrpass)) {
	exit (1);
}

$r = $astman->send_request('Command',array('Command'=>"parkedcalls show"));
$d=explode("\n",trim($r['data']));

// Looks for the parking slot passed in the first ([0] column, if it finds it then
// it get's the channel from the second ([1]) column. 
//
$channel = '';
foreach ($d as $l) {
	$p= preg_split('/ /', $l,-1,PREG_SPLIT_NO_EMPTY);
	if ($p[0] == $argv[1]) {
		$channel = $p[1];
		break;
	}
}

// If the REC_STATUS is RECORDING then we need the remaining channel variables
// for the resulting dialplan to restart MixMonitor appending to the old recording
//
if ($channel) {
	$rec_status = get_var("IMPORT($channel,REC_STATUS)");
	$agi->set_variable('REC_STATUS', $rec_status);
	if ($rec_status == "RECORDING") {
		foreach (array('MIXMON_DIR', 'YEAR', 'MONTH', 'DAY', 'CALLFILENAME', 'MIXMON_FORMAT', 'MIXMON_POST', 'MON_FMT') as $v) {
			$agi->set_variable($v, get_var("IMPORT($channel,$v)"));
		}
	}
}

function get_var($value) {
	global $agi;

	$r = $agi->get_variable( $value );
	if ($r['result'] == 1) {
		$result = $r['data'];
		return trim($result);
	}
	return '';
}
